fuller stack tests
cache:
  more testing
  consider bringing back LRU
SIS:
  maybe hashes should be in a blob header?
  hashsets should be incremental and full and hash
    coalescing should create a new full hashset and
    stop deleting old hashsets by default
features:
  gc
  make rename safer
  url sharing export
  set ulimit -n automatically
  support multi-command sessions
    shell?
  webserver?
  manifest splitting
sftp:
  figure out better read performance
    evidently WriteTo is better than Read
  get fsync support upstreamed into github/pkg/sftp
    sftp supports it, fsync@openssh.com extension
fuse:
  pick deterministic inode numbers?
support changing encryption settings for some data
  blocksize
  algorithm
  root key
integrity check:
  check that there aren't multiple references per hash, or that
    all hash references are good (there is no guaranteed order)
other TODOs in comments

upload pipeline rewrite:
  stage blob prior to uploading
    fixes
      hashing/file change problems
      open filehandle problems
      s3 concurrent uploading
  breadth-first filepath.Walk (instead of sorting
    internally)
  store metadata in blobs also
    should there be metadata just at the beginning of the blob
    of what blocks are contained or at the beginning of each
    block? easier to compress if it's all at the beginning,
    complicates blob creation and offset calculation
  within-blob block header:
    block hash, path, offset within path, length
    metadata?
  hashes per block, block-level dedupe
  compression per block? compression by file extension?
  versioned blob reference (for blob migration)

post rewrite:
  block-level caching?
