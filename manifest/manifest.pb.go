// Code generated by protoc-gen-go.
// source: manifest.proto
// DO NOT EDIT!

/*
Package manifest is a generated protocol buffer package.

It is generated from these files:
	manifest.proto

It has these top-level messages:
	Range
	Stream
	Metadata
	Content
	Entry
	EntrySet
	Page
	HashedData
	HashSet
*/
package manifest

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Metadata_Type int32

const (
	Metadata_UNKNOWN Metadata_Type = 0
	Metadata_FILE    Metadata_Type = 1
	Metadata_SYMLINK Metadata_Type = 2
)

var Metadata_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "FILE",
	2: "SYMLINK",
}
var Metadata_Type_value = map[string]int32{
	"UNKNOWN": 0,
	"FILE":    1,
	"SYMLINK": 2,
}

func (x Metadata_Type) String() string {
	return proto.EnumName(Metadata_Type_name, int32(x))
}
func (Metadata_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type Range struct {
	Blob   string `protobuf:"bytes,1,opt,name=blob" json:"blob,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Length int64  `protobuf:"varint,3,opt,name=length" json:"length,omitempty"`
}

func (m *Range) Reset()                    { *m = Range{} }
func (m *Range) String() string            { return proto.CompactTextString(m) }
func (*Range) ProtoMessage()               {}
func (*Range) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Range) GetBlob() string {
	if m != nil {
		return m.Blob
	}
	return ""
}

func (m *Range) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Range) GetLength() int64 {
	if m != nil {
		return m.Length
	}
	return 0
}

type Stream struct {
	Ranges []*Range `protobuf:"bytes,1,rep,name=ranges" json:"ranges,omitempty"`
}

func (m *Stream) Reset()                    { *m = Stream{} }
func (m *Stream) String() string            { return proto.CompactTextString(m) }
func (*Stream) ProtoMessage()               {}
func (*Stream) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Stream) GetRanges() []*Range {
	if m != nil {
		return m.Ranges
	}
	return nil
}

type Metadata struct {
	Type       Metadata_Type              `protobuf:"varint,1,opt,name=type,enum=manifest.Metadata_Type" json:"type,omitempty"`
	Creation   *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=creation" json:"creation,omitempty"`
	Modified   *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=modified" json:"modified,omitempty"`
	Mode       uint32                     `protobuf:"varint,4,opt,name=mode" json:"mode,omitempty"`
	LinkTarget string                     `protobuf:"bytes,5,opt,name=link_target,json=linkTarget" json:"link_target,omitempty"`
}

func (m *Metadata) Reset()                    { *m = Metadata{} }
func (m *Metadata) String() string            { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()               {}
func (*Metadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Metadata) GetType() Metadata_Type {
	if m != nil {
		return m.Type
	}
	return Metadata_UNKNOWN
}

func (m *Metadata) GetCreation() *google_protobuf.Timestamp {
	if m != nil {
		return m.Creation
	}
	return nil
}

func (m *Metadata) GetModified() *google_protobuf.Timestamp {
	if m != nil {
		return m.Modified
	}
	return nil
}

func (m *Metadata) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *Metadata) GetLinkTarget() string {
	if m != nil {
		return m.LinkTarget
	}
	return ""
}

type Content struct {
	Metadata *Metadata `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Hash     []byte    `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (m *Content) Reset()                    { *m = Content{} }
func (m *Content) String() string            { return proto.CompactTextString(m) }
func (*Content) ProtoMessage()               {}
func (*Content) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Content) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Content) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type Entry struct {
	Path    string   `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Content *Content `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
}

func (m *Entry) Reset()                    { *m = Entry{} }
func (m *Entry) String() string            { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()               {}
func (*Entry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Entry) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Entry) GetContent() *Content {
	if m != nil {
		return m.Content
	}
	return nil
}

type EntrySet struct {
	Entries []*Entry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (m *EntrySet) Reset()                    { *m = EntrySet{} }
func (m *EntrySet) String() string            { return proto.CompactTextString(m) }
func (*EntrySet) ProtoMessage()               {}
func (*EntrySet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *EntrySet) GetEntries() []*Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type Page struct {
	SortKey string `protobuf:"bytes,1,opt,name=sort_key,json=sortKey" json:"sort_key,omitempty"`
	// Types that are valid to be assigned to Descendents:
	//	*Page_Branch
	//	*Page_Entries
	Descendents isPage_Descendents `protobuf_oneof:"descendents"`
}

func (m *Page) Reset()                    { *m = Page{} }
func (m *Page) String() string            { return proto.CompactTextString(m) }
func (*Page) ProtoMessage()               {}
func (*Page) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type isPage_Descendents interface {
	isPage_Descendents()
}

type Page_Branch struct {
	Branch *Stream `protobuf:"bytes,2,opt,name=branch,oneof"`
}
type Page_Entries struct {
	Entries *EntrySet `protobuf:"bytes,3,opt,name=entries,oneof"`
}

func (*Page_Branch) isPage_Descendents()  {}
func (*Page_Entries) isPage_Descendents() {}

func (m *Page) GetDescendents() isPage_Descendents {
	if m != nil {
		return m.Descendents
	}
	return nil
}

func (m *Page) GetSortKey() string {
	if m != nil {
		return m.SortKey
	}
	return ""
}

func (m *Page) GetBranch() *Stream {
	if x, ok := m.GetDescendents().(*Page_Branch); ok {
		return x.Branch
	}
	return nil
}

func (m *Page) GetEntries() *EntrySet {
	if x, ok := m.GetDescendents().(*Page_Entries); ok {
		return x.Entries
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Page) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Page_OneofMarshaler, _Page_OneofUnmarshaler, _Page_OneofSizer, []interface{}{
		(*Page_Branch)(nil),
		(*Page_Entries)(nil),
	}
}

func _Page_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Page)
	// descendents
	switch x := m.Descendents.(type) {
	case *Page_Branch:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Branch); err != nil {
			return err
		}
	case *Page_Entries:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Entries); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Page.Descendents has unexpected type %T", x)
	}
	return nil
}

func _Page_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Page)
	switch tag {
	case 2: // descendents.branch
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Stream)
		err := b.DecodeMessage(msg)
		m.Descendents = &Page_Branch{msg}
		return true, err
	case 3: // descendents.entries
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EntrySet)
		err := b.DecodeMessage(msg)
		m.Descendents = &Page_Entries{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Page_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Page)
	// descendents
	switch x := m.Descendents.(type) {
	case *Page_Branch:
		s := proto.Size(x.Branch)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Page_Entries:
		s := proto.Size(x.Entries)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type HashedData struct {
	Hash []byte  `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Data *Stream `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *HashedData) Reset()                    { *m = HashedData{} }
func (m *HashedData) String() string            { return proto.CompactTextString(m) }
func (*HashedData) ProtoMessage()               {}
func (*HashedData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *HashedData) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *HashedData) GetData() *Stream {
	if m != nil {
		return m.Data
	}
	return nil
}

type HashSet struct {
	Hashes []*HashedData `protobuf:"bytes,1,rep,name=hashes" json:"hashes,omitempty"`
}

func (m *HashSet) Reset()                    { *m = HashSet{} }
func (m *HashSet) String() string            { return proto.CompactTextString(m) }
func (*HashSet) ProtoMessage()               {}
func (*HashSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *HashSet) GetHashes() []*HashedData {
	if m != nil {
		return m.Hashes
	}
	return nil
}

func init() {
	proto.RegisterType((*Range)(nil), "manifest.Range")
	proto.RegisterType((*Stream)(nil), "manifest.Stream")
	proto.RegisterType((*Metadata)(nil), "manifest.Metadata")
	proto.RegisterType((*Content)(nil), "manifest.Content")
	proto.RegisterType((*Entry)(nil), "manifest.Entry")
	proto.RegisterType((*EntrySet)(nil), "manifest.EntrySet")
	proto.RegisterType((*Page)(nil), "manifest.Page")
	proto.RegisterType((*HashedData)(nil), "manifest.HashedData")
	proto.RegisterType((*HashSet)(nil), "manifest.HashSet")
	proto.RegisterEnum("manifest.Metadata_Type", Metadata_Type_name, Metadata_Type_value)
}

func init() { proto.RegisterFile("manifest.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 528 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x53, 0x4f, 0x6f, 0xd3, 0x4e,
	0x10, 0xad, 0x13, 0xc7, 0xf6, 0x6f, 0xfc, 0x6b, 0x09, 0x2b, 0x04, 0xa6, 0x97, 0x46, 0x16, 0x12,
	0xa1, 0x45, 0xae, 0x08, 0x02, 0xee, 0x85, 0x56, 0x29, 0x69, 0x03, 0xda, 0x04, 0xa1, 0x72, 0xa9,
	0x36, 0xf1, 0xc4, 0xb1, 0x1a, 0xef, 0x46, 0xf6, 0x70, 0xc8, 0x37, 0xe0, 0xc0, 0x87, 0x46, 0xbb,
	0xfe, 0x87, 0xf8, 0x23, 0x6e, 0x33, 0xb3, 0x6f, 0xe6, 0xbd, 0x79, 0x63, 0xc3, 0x41, 0x26, 0x64,
	0xba, 0xc2, 0x82, 0xa2, 0x6d, 0xae, 0x48, 0x31, 0xaf, 0xce, 0x0f, 0x8f, 0x12, 0xa5, 0x92, 0x0d,
	0x9e, 0x9a, 0xfa, 0xe2, 0xeb, 0xea, 0x94, 0xd2, 0x0c, 0x0b, 0x12, 0xd9, 0xb6, 0x84, 0x86, 0x13,
	0xe8, 0x71, 0x21, 0x13, 0x64, 0x0c, 0xec, 0xc5, 0x46, 0x2d, 0x02, 0x6b, 0x60, 0x0d, 0xff, 0xe3,
	0x26, 0x66, 0x0f, 0xc1, 0x51, 0xab, 0x55, 0x81, 0x14, 0x74, 0x06, 0xd6, 0xb0, 0xcb, 0xab, 0x4c,
	0xd7, 0x37, 0x28, 0x13, 0x5a, 0x07, 0xdd, 0xb2, 0x5e, 0x66, 0xe1, 0x0b, 0x70, 0x66, 0x94, 0xa3,
	0xc8, 0xd8, 0x53, 0x70, 0x72, 0x3d, 0xb6, 0x08, 0xac, 0x41, 0x77, 0xe8, 0x8f, 0xee, 0x45, 0x8d,
	0x44, 0x43, 0xc7, 0xab, 0xe7, 0xf0, 0x5b, 0x07, 0xbc, 0x6b, 0x24, 0x11, 0x0b, 0x12, 0xec, 0x04,
	0x6c, 0xda, 0x6d, 0xd1, 0x68, 0x38, 0x18, 0x3d, 0x6a, 0x7b, 0x6a, 0x44, 0x34, 0xdf, 0x6d, 0x91,
	0x1b, 0x10, 0x7b, 0x0d, 0xde, 0x32, 0x47, 0x41, 0xa9, 0x92, 0x46, 0x9e, 0x3f, 0x3a, 0x8c, 0xca,
	0x6d, 0xa3, 0x7a, 0xdb, 0x68, 0x5e, 0x6f, 0xcb, 0x1b, 0xac, 0xee, 0xcb, 0x54, 0x9c, 0xae, 0x52,
	0x8c, 0x8d, 0xfc, 0x7f, 0xf4, 0xd5, 0x58, 0x6d, 0x50, 0xa6, 0x62, 0x0c, 0xec, 0x81, 0x35, 0xdc,
	0xe7, 0x26, 0x66, 0x47, 0xe0, 0x6f, 0x52, 0x79, 0x77, 0x4b, 0x22, 0x4f, 0x90, 0x82, 0x9e, 0xf1,
	0x0e, 0x74, 0x69, 0x6e, 0x2a, 0xe1, 0x31, 0xd8, 0x5a, 0x32, 0xf3, 0xc1, 0xfd, 0x34, 0x9d, 0x4c,
	0x3f, 0x7c, 0x9e, 0xf6, 0xf7, 0x98, 0x07, 0xf6, 0xc5, 0xe5, 0xd5, 0x79, 0xdf, 0xd2, 0xe5, 0xd9,
	0xcd, 0xf5, 0xd5, 0xe5, 0x74, 0xd2, 0xef, 0x84, 0x37, 0xe0, 0xbe, 0x55, 0x92, 0x50, 0x12, 0x8b,
	0xc0, 0xcb, 0xaa, 0x95, 0x8d, 0x19, 0xfe, 0x88, 0xfd, 0x6e, 0x06, 0x6f, 0x30, 0x5a, 0xdb, 0x5a,
	0x14, 0xe5, 0x39, 0xfe, 0xe7, 0x26, 0x7e, 0x6f, 0x7b, 0x9d, 0x7e, 0x97, 0xdb, 0xfa, 0x3d, 0x1c,
	0x43, 0xef, 0x5c, 0x52, 0xbe, 0xd3, 0xc0, 0xad, 0xa0, 0x75, 0x7d, 0x65, 0x1d, 0xb3, 0x13, 0x70,
	0x97, 0x25, 0x6f, 0xe5, 0xe3, 0xfd, 0x96, 0xab, 0x12, 0xc4, 0x6b, 0x44, 0xf8, 0x0a, 0x3c, 0x33,
	0x69, 0x86, 0xc4, 0x9e, 0x81, 0x8b, 0x92, 0xf2, 0xf4, 0x4f, 0x57, 0x36, 0x20, 0x5e, 0xbf, 0x87,
	0xdf, 0x2d, 0xb0, 0x3f, 0x8a, 0x04, 0xd9, 0x63, 0xf0, 0x0a, 0x95, 0xd3, 0xed, 0x1d, 0xee, 0x2a,
	0x11, 0xae, 0xce, 0x27, 0xb8, 0x63, 0xc7, 0xe0, 0x2c, 0x72, 0x21, 0x97, 0xeb, 0x4a, 0x46, 0xbf,
	0x9d, 0x56, 0x7e, 0x55, 0xe3, 0x3d, 0x5e, 0x21, 0x58, 0xd4, 0x52, 0x77, 0x7f, 0xf5, 0xa7, 0xd6,
	0x37, 0xde, 0x6b, 0xf8, 0xcf, 0xf6, 0xc1, 0x8f, 0xb1, 0x58, 0xa2, 0x8c, 0x51, 0x52, 0x11, 0x5e,
	0x00, 0x8c, 0x45, 0xb1, 0xc6, 0xf8, 0xdd, 0xcf, 0xee, 0x59, 0xad, 0x7b, 0xec, 0x09, 0x18, 0xe7,
	0xfe, 0x26, 0xa5, 0xf2, 0xf5, 0x0d, 0xb8, 0x7a, 0x8e, 0x36, 0xe3, 0x39, 0x38, 0xba, 0xb1, 0xf1,
	0xe2, 0x41, 0xdb, 0xd2, 0x52, 0xf1, 0x0a, 0x73, 0x06, 0x5f, 0x9a, 0x7f, 0x74, 0xe1, 0x98, 0xcf,
	0xee, 0xe5, 0x8f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x4a, 0xdb, 0xb4, 0xc6, 0x03, 0x00, 0x00,
}
